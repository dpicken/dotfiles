set nocompatible


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugin management

function s:EnsurePlugin(path, url)
  if isdirectory(a:path)
    return 0
  endif
  call system("git clone " . a:url . " " . a:path)
  return 1
endfunction

function s:EnsurePlugins()
  let plugins_installed = 0
  let plugins_installed += s:EnsurePlugin($HOME . "/.vim/bundle/vim-pathogen", "https://github.com/tpope/vim-pathogen.git")
  let plugins_installed += s:EnsurePlugin($HOME . "/.vim/bundle/vim-scm", "https://github.com/dpicken/vim-scm.git")
  let plugins_installed += s:EnsurePlugin($HOME . "/.vim/bundle/vim-ui", "https://github.com/dpicken/vim-ui.git")
  if plugins_installed != 0
    echo "EnsurePlugins: plugins installed, restart might be required, exiting"
    qa!
  endif
endfunction

call s:EnsurePlugins()

runtime bundle/vim-pathogen/autoload/pathogen.vim
execute pathogen#infect()


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Misc options

set autoindent
set backspace=indent,eol,start
set cinoptions=g0
set clipboard=unnamed
set complete-=i
set completeopt=longest,menuone
set display+=lastline
set noequalalways
set expandtab
set fileformat=unix
set fileformats=unix,dos
set gdefault
set history=500
set nohlsearch
set ignorecase
set incsearch
if &term != "linux"
  set keymodel=startsel,stopsel
endif
set laststatus=2
set lazyredraw
set linebreak
let mapleader=","
set matchpairs+=<:>
set nomodeline
set mouse=
set mousemodel=popup
set path=.
set shiftwidth=2
set shortmess-=T
set shortmess+=I
set showcmd
set sidescroll=1
set smartcase
set smartindent
set smarttab
set softtabstop=2
set splitbelow
set splitright
set tabpagemax=100
set noswapfile
set switchbuf=usetab
if v:version >=702
  set switchbuf+=newtab
endif
set timeoutlen=250
if has("unix") && isdirectory($HOME . "/.cache")
  set viminfo+=n$HOME/.cache/viminfo
endif
set whichwrap=b,s,h,l,<,>,[,]
set wildmode=longest,list
set winaltkeys=yes
set winheight=10
set winminheight=0
set nowrap


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" UI options

set guioptions-=a

if has("gui_running")
  set guicursor=a:block-blinkwait0-blinkoff0-blinkon0

  if has("gui_gtk")
    set guifont=Monospace\ 10
  elseif has("gui_win32")
    set guifont=Consolas:h11:cANSI
  endif

  set guitabtooltip=%F

  set guioptions-=m
  set guioptions-=T
  set guioptions-=t

  set columns=80
  set lines=40
elseif &term =~ "xterm"
  set t_Co=256
elseif &term == "linux"
  " Block cursor
  set t_ve+=[?81;0;112c
  let loaded_matchparen = 1
endif

colorscheme dan
syntax enable


""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plugin options

filetype plugin indent on

function! s:Chomp(str)
  return substitute(a:str, '\n\+$', '', '')
endfunction

let g:location=s:Chomp(system("$HOME/bin/location"))
let g:netrw_dirhistmax=0
let g:scm_edit_cmd="SwitchBuf"
let g:ui_buf_strip_trailing_white_space_on_write="yes"

function! s:SetProjectOptions()
  let project_config_file = $HOME . "/.vim/project_" . g:location
  if filereadable(project_config_file)
    execute "source " . project_config_file
  endif

  if has("unix")
    let g:ui_project_absolute_file_search_paths += ["/usr/include"]
    let g:ui_project_absolute_file_search_paths += ["/usr/include/c++/**"]
  endif
endfunction

if has("autocmd")
  augroup vimrc
    autocmd!
    autocmd VimEnter * call s:SetProjectOptions()
  augroup END
endif
